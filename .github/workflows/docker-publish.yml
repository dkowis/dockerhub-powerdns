name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  # schedule:
  #   - cron: '11 1 * * 1'
  push:
    branches: [ kowis-build ]
#  pull_request:
    branches: [ kowis-build ]
  workflow_dispatch:

jobs:
  find_latest_stable:
    runs-on: ubuntu-latest
    outputs:
      dnsdist_version: ${{steps.find_versions.outputs.dnsdistVersion}}
      recursor_version: ${{steps.find_versions.outputs.recursorVersion}}
      auth_version: ${{steps.find_versions.outputs.authVersion}}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
            node-version: 16
      - id: prereq
        run: npm install @octokit/graphql
      - id: find_versions
        run: node .github/actions/get_latest_stable.mjs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    environment: ${{ matrix.environment }}
    needs: find_latest_stable
    runs-on: self-hosted
    permissions:
      contents: read

    strategy:
      matrix:
        include:
#         - registry: ghcr.io
#           environment: 'GitHub'
          - registry: registry.light.kow.is
            context: authoritative
            version: ${{needs.find_latest_stable.outputs.auth_version}}
            image: powerdns-server
            environment: 'Registry.light.kow.is'
          - registry: registry.light.kow.is
            context: dnsdist
            image: dnsdist
            version: ${{needs.find_latest_stable.outputs.dnsdist_version}}
            environment: 'Registry.light.kow.is'
          - registry: registry.light.kow.is
            context: recursor
            image: powerdns-recursor
            version: ${{needs.find_latest_stable.outputs.recursor_version}}
            environment: 'Registry.light.kow.is'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry docker.io
        if: ${{ 'docker.io' == matrix.registry && github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ matrix.registry }}
          username: ${{ secrets.REGISTRY_LOGIN }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - name: Log into registry ghcr.io
        if: ${{ 'ghcr.io' == matrix.registry && github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ matrix.registry }}
          username: ${{ secrets.REGISTRY_LOGIN }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log into registry registry.light.kow.is
        if: ${{ 'registry.light.kow.is' == matrix.registry && github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ matrix.registry }}
          username: ${{ secrets.REGISTRY_LOGIN }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.registry }}/kowis/${{ matrix.image }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=${{ matrix.version }}

      # Only set up QEMU if the architecture isn't already ARM64 for us.
      - name: Set up QEMU for buildx
        uses: docker/setup-qemu-action@v1
        if: ${{ runner.arch != 'ARM64' }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          config-inline: |
            [registry."docker.io"]
              mirrors = ["mirror.gcr.io", "registry.light.kow.is/docker-hub"]

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.context }}/.
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
